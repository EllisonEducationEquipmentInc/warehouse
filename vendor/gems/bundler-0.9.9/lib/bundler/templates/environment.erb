# DO NOT MODIFY THIS FILE

require 'digest/sha1'
require "rubygems"

<%= shared_helpers %>

module Bundler
  LOCKED_BY    = '<%= Bundler::VERSION %>'
  FINGERPRINT  = <%= gemfile_fingerprint.inspect %>
  AUTOREQUIRES = <%= autorequires_for_groups.inspect %>
  SPECS        = [
    <% specs_for_lock_file.each do |spec| -%>
    <%= spec.inspect %>,
    <% end -%>
  ].map do |hash|
    spec = eval(File.read(hash[:loaded_from]), binding, hash[:loaded_from])
    spec.loaded_from = hash[:loaded_from]
    spec.require_paths = hash[:load_paths]
    spec
  end

  extend SharedHelpers

  def self.match_fingerprint
    print = Digest::SHA1.hexdigest(File.read(File.expand_path('../../Gemfile', __FILE__)))
    unless print == FINGERPRINT
      abort 'Gemfile changed since you last locked. Please `bundle lock` to relock.'
    end
  end

  def self.setup(*groups)
    match_fingerprint
    clean_load_path
    cripple_rubygems(SPECS)
    SPECS.each do |spec|
      Gem.loaded_specs[spec.name] = spec
      $LOAD_PATH.unshift(*spec.require_paths)
    end
  end

  def self.require(*groups)
    groups = [:default] if groups.empty?
    groups.each do |group|
      (AUTOREQUIRES[group] || []).each do |file, explicit|
        if explicit
          Kernel.require file
        else
          begin
            Kernel.require file
          rescue LoadError
          end
        end
      end
    end
  end

  # Setup bundle when it's required.
  setup
end
